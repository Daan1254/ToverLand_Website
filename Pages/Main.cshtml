@page
@model MainModel
@{
    ViewData["Title"] = "Main";
}
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.css" rel="stylesheet">
<script src='https://cdn.jsdelivr.net/npm/rrule@2.6.4/dist/es5/rrule.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.14/index.global.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar/rrule@6.1.14/index.global.min.js'></script>

<main class="grid">
    <div class="card">
  <div><canvas id="occupation"></canvas></div>
    </div>
     <div class="card">
        <div><canvas id="visitors"></canvas></div>
    </div>
     <div class="card">
      <div><canvas id="attraction"></canvas></div>
    </div>
     <div class="card">
      <div id='calendar'></div>
    </div>
    </main>

    <script>
          const chart1 = document.getElementById('occupation');

        const occupationData = [348, 243, 123, 213, 278, 413, 348];
        const waitingTimeData = [45, 30, 20, 25, 35, 50, 40];
        const backgroundColors = ['#FF3131', '#FFBD59', '#7ED957', '#FFBD59', '#FFBD59', '#FF3131', '#FF3131'];

        new Chart(chart1, {
            type: 'bar',
            data: {
                labels: ['Troy', 'FÄ“nix', 'Pixarus', 'Garden Tour', 'Merlins Quest', 'Dwervelwind', 'Blitz Bahn'],
                datasets: [
                    {
                        label: 'Occupation per Attraction',
                        data: occupationData,
                        backgroundColor: backgroundColors,
                        borderWidth: 1,
                    }
                ]
            },
            options: {
                plugins: {
                    legend: {
                        display: true,
                        labels: {
                            weight: 'bolder',
                            color: 'black',
                            generateLabels: function(chart) {
                                return [
                                    {
                                        text: 'Busy',
                                        fillStyle: 'red',
                                        strokeStyle: 'red',
                                        lineWidth: 1,
                                        hidden: false,
                                        index: 0
                                    },
                                    {
                                        text: 'Minimal Busy',
                                        fillStyle: 'orange',
                                        strokeStyle: 'orange',
                                        lineWidth: 1,
                                        hidden: false,
                                        index: 1
                                    },
                                    {
                                        text: 'Not Busy',
                                        fillStyle: '#7ED957',
                                        strokeStyle: '#7ED957',
                                        lineWidth: 1,
                                        hidden: false,
                                        index: 2
                                    }
                                ];
                            }
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const occupation = occupationData[context.dataIndex];
                                const waitingTime = waitingTimeData[context.dataIndex];
                                return `Number of Visitors: ${occupation}, Waiting Time: ${waitingTime} minutes`;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        min: 0,
                        max: 500,
                        ticks: {
                            color: 'black',
                            weight: 'bold'
                        },
                        title: {
                            display: true,
                            text: 'Number of Visitors',
                            color: 'black',
                            weight: 'bold'
                        }
                    },
                    x: {
                        ticks: { color: 'black', weight: 'bold'},
                           title: {
                            display: true,
                            text: 'Attraction',
                            color: 'black',
                            weight: 'bold',
                        },
                    }
                }
            }
        });
</script>

<script>
 // Chart 2: Line Chart (Daily Visitors)
        const dailyVisitorsCtx = document.getElementById('visitors');
        new Chart(dailyVisitorsCtx, {
            type: 'line',
            data: {
                labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
                datasets: [{
                    label: 'Daily Visitors',
                    data: [3200, 2352, 1186, 4432, 6532, 7634, 7723],
                    borderWidth: 1,
                    borderColor: '#2e2d53', 
                    tension: 0.3,
                }]
            },
            options: {
                plugins: {
                    legend: {
                        labels: {
                            color: '#2e2d53',
                            fillStyle: '#2e2d53',
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        min: 0,
                        max: 10000,
                        grace: '5%',
                        ticks: { color: 'black', weight: 'bold' },
                        title: {
                            display: true,
                            text: 'Number of Daily Visitors',
                            color: 'black',
                            weight: 'bold'
                        }
                    },
                    x: { ticks: { color: 'black', weight: 'bold' },
                    title: {
                            display: true,
                            text: 'Day',
                            color: 'black',
                            weight: 'bold',
                        },
                     }
                    
                }
            }
        });

</script>

<script>
  //Chart 3: Line Chart Visitors per hour of any attraction (example data Troy)
const ctx2 = document.getElementById('attraction');

  new Chart(ctx2, {
    type: 'line',
    data: {
      labels: ['08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00'],
      datasets: [{
        label: 'Visitors Troy',
        data: [289, 243, 267, 188, 130, 212, 261, 264, 223, 189, 127],
        borderWidth: 1,
        borderColor: '#2e2d53', 
      }]
    },
       options: {
          plugins: {
            legend: {
                labels: {
                    color: 'black'
                }
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                min: 0,
                max: 500,
                grace: '5%',
                ticks: {
                    color: 'black',  
                    weight: 'bold'
                },
                title: {
                            display: true,
                            text: 'Visitors Troy',
                            color: 'black',
                            weight: 'bold',
                        },
            },
            x: {
                ticks: {
                    color: 'black',
                    weight: 'bold'
                },
                title: {
                            display: true,
                            text: 'Time',
                            color: 'black',
                            weight: 'bold',
                        },
            }
        }
    }
});
</script>

<script>
//fullcalendar (chart 4)

  document.addEventListener("DOMContentLoaded", function () {
    var calendarEl = document.getElementById("calendar");
    var events = [
     // Event for Monday, Tuesday, and Friday from 08:00 to 10:00
        {
            title: 'Troy, Ithaka',
            daysOfWeek: [1, 2, 5], // 1 = Monday, 2 = Tuesday, 5 = Friday
            startTime: '08:00',
            endTime: '10:00',
            color: '#9A6324',
            rrule: {
                freq: 'weekly',
                byweekday: [1, 2, 5], // Repeat on Monday, Tuesday, and Friday
                dtstart: '2024-06-24T08:00:00',
                until: '2024-12-31T10:00:00'
            }
        },
        {
            title: 'BoosterBike, Magische Vallei',
            startTime: '10:30:00', // Start time for the event
            endTime: '12:00:00',   // End time for the event
            daysOfWeek: [0, 1, 2, 3, 4, 5, 6], // 0 = Sunday, 1 = Monday, ..., 6 = Saturday
            rrule: {
                freq: 'weekly',
                byweekday: [0, 1, 2, 3, 4, 5, 6], // Repeat on all days of the week
                dtstart: '2024-06-24T10:30:00',
                until: '2024-12-31T12:00:00'
            },
            color: 'red' // Assigning a color to this event
        },
        {
            title: 'Theekopjes, Land van Toos',
            startTime: '13:30:00', // Start time for the event
            endTime: '15:00:00',   // End time for the event
            daysOfWeek: [0, 2, 4, 5,], // 0 = Sunday, 1 = Monday, ..., 6 = Saturday
            rrule: {
                freq: 'weekly',
                byweekday: [0, 1, 2, 3, 4, 5, 6], // Repeat on all days of the week
                dtstart: '2024-06-24T10:30:00',
                until: '2024-12-31T12:00:00'
            },
            color: '#f58b9e' // Assigning a color to this event
        },
        {
            title: 'Pixarus, Avalon',
            startTime: '16:30:00', // Start time for the event
            endTime: '18:00:00',   // End time for the event
            daysOfWeek: [2,], // 0 = Sunday, 1 = Monday, ..., 6 = Saturday
            rrule: {
                freq: 'weekly',
                byweekday: [0, 1, 2, 3, 4, 5, 6], // Repeat on all days of the week
                dtstart: '2024-06-24T10:30:00',
                until: '2024-12-31T12:00:00'
            },
            color: '#6464f7' // Assigning a color to this event
        },
        // Event for other days (Wednesday, Thursday, Saturday, Sunday) from 08:00 to 10:00
        {
            title: 'Merlins Quest, Avalon',
            daysOfWeek: [3, 4, 6, 0], // 3 = Wednesday, 4 = Thursday, 6 = Saturday, 0 = Sunday
            startTime: '08:00',
            endTime: '10:00',
            color: '#6464f7',
            rrule: {
                freq: 'weekly',
                byweekday: [3, 4, 6, 0], // Repeat on Wednesday, Thursday, Saturday, Sunday
                dtstart: '2024-06-24T08:00:00',
                until: '2024-12-31T10:00:00'
            }
        }
    ];

    //initialize calendar 
    var calendar = new FullCalendar.Calendar(calendarEl, {
        timeZone: "UTC+1",
        initialView: "timeGridDay", 
        height: '100%',
        slotMinTime: '08:00:00',
        slotMaxTime: '18:00:01',
        allDaySlot: false,
        slotLabelFormat: {
            hour: '2-digit',
            minute: '2-digit',
            hour12: false,
            omitZeroMinute: false,
        },
        headerToolbar: {
            left: "prev,next",
            center: "title",
            right: "timeGridDay,timeGridWeek",
        },
        editable: false,
        nowIndicator: true,
        events: events,
    });

    calendar.render();
});
  </script>

